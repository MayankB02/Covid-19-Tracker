{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css"],"names":["module","exports","container","card","infected","recovered","deaths","Cards","_ref","_ref$data","data","confirmed","lastUpdate","fill","type","number","value","desc","style","styles","react_default","a","createElement","className","Grid","direction","justify","spacing","map","eachFill","key","item","component","Card","xs","md","cx","CardContent","Typography","color","gutterBottom","variant","build_default","start","end","duration","separator","Date","toDateString","url","fetchData","Object","asyncToGenerator","regenerator_default","mark","_callee","country","_yield$axios$get","_yield$axios$get$data","wrap","_context","prev","next","concat","axios","get","sent","abrupt","t0","console","log","stop","_x","apply","this","arguments","fetchDailyData","_ref2","_callee2","_yield$axios$get2","modifiedData","_context2","dailyData","total","date","reportDate","countries","_ref3","_callee3","_yield$axios$get3","_countries","_context3","name","Charts","_useState","useState","_useState2","slicedToArray","setDailyData","useEffect","t1","fetchAPI","lineChart","es","labels","datasets","_ref4","label","borderColor","_ref5","backgroundColor","barChart","option","legend","display","title","text","CountryPicker","handleClickChange","countryNames","setCountries","FormControl","formControl","NativeSelect","defaultValue","onClick","event","target","eachName","i","App","setData","_useState3","_useState4","setCountry","dataFunc","fetchedData","marginBottom","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.daddd503.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__34Ts6\",\"card\":\"Cards_card__LHKop\",\"infected\":\"Cards_infected__UijD0\",\"recovered\":\"Cards_recovered__UqBf9\",\"deaths\":\"Cards_deaths__Twun8\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport styles from \"./Cards.module.css\";\r\nimport cx from \"classnames\";\r\n\r\nexport default function Cards({\r\n  data: { confirmed, recovered, deaths, lastUpdate }\r\n}) {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n\r\n  const fill = [\r\n    {\r\n      type: \"Infected\",\r\n      number: confirmed.value,\r\n      desc: \"Number of active COVID-19 cases\",\r\n      style: styles.infected\r\n    },\r\n    {\r\n      type: \"Recovered\",\r\n      number: recovered.value,\r\n      desc: \"Number of recovered COVID-19 cases\",\r\n      style: styles.recovered\r\n    },\r\n    {\r\n      type: \"Deaths\",\r\n      number: deaths.value,\r\n      desc: \"Number of deaths due to COVID-19\",\r\n      style: styles.deaths\r\n    }\r\n  ];\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container direction=\"row\" justify=\"center\" spacing={3}>\r\n        {fill.map(eachFill => (\r\n          <Grid\r\n            key={eachFill.type}\r\n            item\r\n            component={Card}\r\n            xs={12}\r\n            md={3}\r\n            className={cx(styles.card, eachFill.style)}\r\n          >\r\n            <CardContent>\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                {eachFill.type}\r\n              </Typography>\r\n              <Typography variant=\"h5\">\r\n                <CountUp\r\n                  start={0}\r\n                  end={eachFill.number}\r\n                  duration={2.5}\r\n                  separator=\",\"\r\n                />\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                {new Date(lastUpdate).toDateString()}\r\n              </Typography>\r\n              <Typography variant=\"body2\">{eachFill.desc}</Typography>\r\n            </CardContent>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nlet url = \"https://covid19.mathdro.id/api\";\r\nexport const fetchData = async country => {\r\n  if (country) {\r\n    url = `https://covid19.mathdro.id/api/countries/${country}`;\r\n  } else {\r\n    url = \"https://covid19.mathdro.id/api\";\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate }\r\n    } = await axios.get(url);\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map(dailyData => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const countries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries }\r\n    } = await axios.get(`${url}/countries`);\r\n    return countries.map(country => country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\n\r\nexport default function Charts({\r\n  data: { confirmed, deaths, recovered },\r\n  country\r\n}) {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true\r\n          }\r\n        ]\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\"\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value]\r\n          }\r\n        ]\r\n      }}\r\n      option={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` }\r\n      }}\r\n    />\r\n  ) : null;\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport { countries } from \"../../api\";\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nexport default function CountryPicker({ handleClickChange }) {\r\n  const [countryNames, setCountries] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await countries());\r\n    };\r\n    fetchAPI();\r\n  }, [setCountries]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onClick={event => handleClickChange(event.target.value)}\r\n      >\r\n        <option value=\"\">Global</option>\r\n        {countryNames.map((eachName, i) => (\r\n          <option key={i} value={eachName}>\r\n            {eachName}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport { Cards, Chart, CountryPicker } from \"./components\";\nimport Typography from \"@material-ui/core/Typography\"\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api\";\n\nexport default function App() {\n  const [data, setData] = useState({});\n  const [country, setCountry] = useState(\"\");\n\n  const dataFunc = async () => {\n    const fetchedData = await fetchData();\n    setData(fetchedData);\n  };\n  useEffect(() => dataFunc(), []);\n\n  const handleClickChange = async country => {\n    const fetchedData = await fetchData(country);\n    setData(fetchedData);\n    setCountry(country);\n  };\n\n  return (\n    <div className={styles.container}>\n      <h1 style={{marginBottom:\"0\"}}>Covid-19 Tracker</h1>\n      <Cards data={data} />\n      <CountryPicker handleClickChange={handleClickChange} />\n      <Chart data={data} country={country} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__26Me7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1uXpa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2sxBQ\"};"],"sourceRoot":""}